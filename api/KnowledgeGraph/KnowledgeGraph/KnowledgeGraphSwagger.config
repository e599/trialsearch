<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KnowledgeGraph</name>
    </assembly>
    <members>
        <member name="T:KnowledgeGraph.Common.eEnvironment">
            <summary>
            The environment in which the code is currently running.
            Determined by the ASPNETCORE_ENVIRONMENT environment
            variable.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Common.Defaults">
            <summary>
            Defaults for searches from the REST service.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Common.Nodes">
            <summary>
            Node names in the database.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Common.Rel">
            <summary>
            Relationship names in the database.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Common.Constants">
            <summary>
            Some generic constants.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Common.Constants.CurrentEnvironment">
            <summary>
            The current environment.  Stored in a static variable or else looked up from the 
            ASPNETCORE_ENVIRONMENT environment variable.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Common.CUtilities">
            <summary>
            Generic utilities.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Common.CUtilities.JsonName``1(System.String)">
            <summary>
            Adapted from
            https://stackoverflow.com/questions/14285498/getcustomattribute-returns-null        
            Get the JsonProperty attribute name of the property.
            </summary>
            <typeparam name="T">The type of the object the parameter is in.</typeparam>
            <param name="propertyName">The name of the property.</param>
            <returns>The JsonProperty attribute name.</returns>
        </member>
        <member name="M:KnowledgeGraph.Common.CUtilities.JsonNames``1(System.Type)">
            <summary>
            https://stackoverflow.com/questions/33616005/get-a-list-of-json-property-names-from-a-class-to-use-in-a-query-string
            https://stackoverflow.com/questions/2490674/how-do-i-find-all-properties-of-type-datetime-in-an-class
            Get all the JsonProperty attribute names of all properties in the object.
            Optionally filter by type.
            </summary>
            <typeparam name="T">The type ofthe object the parameter is in.</typeparam>
            <returns>The JsonProperty attribute names.</returns>
        </member>
        <member name="M:KnowledgeGraph.Common.CUtilities.EscapeSpecialCharacters(System.String)">
            <summary>
            Escape all special characters in a string for Neo4j.
            </summary>
            <param name="s">The string to escape.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="T:KnowledgeGraph.Common.Extensions">
            <summary>
            Generic extension methods added to classes.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Common.Extensions.EnumValue(Newtonsoft.Json.JsonConverter,System.Object,System.String@)">
            <summary>
            Get the string representation of an enum from it's converter.
            Return success.
            </summary>
            <param name="converter">The converter to use.</param>
            <param name="untypedValue">The enumerator.</param>
            <param name="value">The enumerator's string representation.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:KnowledgeGraph.Common.Extensions.ConvertEnum``1(Newtonsoft.Json.JsonConverter,System.String,System.Object@)">
            <summary>
            Get the enumerator for a string from the enumerator's converter.
            NOTE: Enum values MUST be lowercase in the schema for this to work. (Currently just the Search Request parameters.)
            </summary>
            <typeparam name="T">The enumerator type.</typeparam>
            <param name="converter">The converter to use.</param>
            <param name="existingValue">The string representation of the enumerator.</param>
            <param name="value">The enumerator.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:KnowledgeGraph.Common.Extensions.PrintQuotedDelimited(System.Collections.Generic.List{System.String})">
            <summary>
            Print a list to a quoted delimited string.
            </summary>
            <param name="list">The list to print to a string.</param>
            <returns>The quoted delimited string.</returns>
        </member>
        <member name="T:KnowledgeGraph.GlobalExceptionHandler">
            <summary>
            A global exception handler.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.GlobalExceptionHandler.#ctor(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            The constructor.
            </summary>
            <param name="logger">Dependency injected Logger.</param>
        </member>
        <member name="M:KnowledgeGraph.GlobalExceptionHandler.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            The method called on an exception.  If the error is a known type then serialize it to the 
            ErrorResponse object and return it.  If it's not a known type then create a 500 error Exception
            and return that.  Log any errors.
            </summary>
            <param name="context">The context of the exception.</param>
        </member>
        <member name="T:KnowledgeGraph.Controllers.KnowledgeGraphController">
            <summary>
            The trialsearch api.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Controllers.KnowledgeGraphController.#ctor(Microsoft.Extensions.Options.IOptions{KnowledgeGraph.DataTransferObjects.Settings})">
            <summary>
            Contructor with dependency injected strongly typed settings.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:KnowledgeGraph.Controllers.KnowledgeGraphController.ListClinicalTrials(System.String)">
            <summary>
            The Clinical Trial Search endpoint.  This endpoint takes a search term in the URL and many
            querystring parameters.  All schema for searches is outlined in the autogenerated 
            WireModels.cs file.
            </summary>
            <param name="search_term">The term to search Neo4j for.</param>
            <returns></returns>
        </member>
        <member name="M:KnowledgeGraph.Controllers.KnowledgeGraphController.ClinicalTrialDetail(System.String)">
            <summary>
            The Clinical Trial Detail endpoint.  This endpoint takes an id of a Clinical Trial
            (gathered using the other endpoint) and returns all information about that trial.
            </summary>
            <param name="new_id">The id of the trial.</param>
            <returns></returns>
        </member>
        <member name="T:KnowledgeGraph.DatabaseInterface.ClientDetailExtensions">
            <summary>
            Extensions for Neo4jClient library's classes that are used to create Cypher queries for the detail endpoint.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientDetailExtensions.KGWhere_ID(Neo4jClient.Cypher.ICypherFluentQuery,System.String)">
            <summary>
            Search for the id using a Cypher Where query.
            </summary>
            <param name="source">The query source.</param>
            <param name="new_id">The id to search for.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientDetailExtensions.KGWith_CollectDetail(Neo4jClient.Cypher.ICypherFluentQuery)">
            <summary>
            Collect all the information about the Clinical Trial and create a Cypher query to return it.
            </summary>
            <param name="source">The query source.</param>    
            <returns>The modified query source.</returns>
        </member>
        <member name="T:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_Radius(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by a radius surrounding a GPS coordinate.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_BoundingBox(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by a GPS coordinate bounding box.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGWith_CollectResults(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to gather results into a single object to return.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGCallYield_Search(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by a search term using a lucene index.  The index is created at instantiation
            of the Neo4jInterface.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_AgeRange(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by AgeRange relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_AllGenders(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Gender relationships.
            Note: This query is an AND.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_OneGender(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DatabaseObjects.Gender,System.String)">
            <summary>
            Create a cypher query to filter for a single gender.
            </summary>
            <param name="source">The query source.</param>
            <param name="gender"></param>
            <param name="id"></param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_Status(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by OverallStatus relationships
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_Phase(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Phase relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_InterventionType(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by InterventionType relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_HealthyVolunteers(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by HealthyVolunteers relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_ConditionId(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Condition relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_LocationId(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Location relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_SponsorId(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Sponsor relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGMatch_StartYear(Neo4jClient.Cypher.ICypherFluentQuery,KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by StartYear relationships.
            </summary>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.ClientSearchExtensions.KGSkipLimit_Paging``1(Neo4jClient.Cypher.ICypherFluentQuery{``0},KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Create a cypher query to filter by Page number and Skip results.  This query performs the requested paging.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="source">The query source.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The modified query source.</returns>
        </member>
        <member name="T:KnowledgeGraph.DatabaseInterface.Neo4jInterface">
            <summary>
            The Neo4j database interface.  Methods to access Neo4j.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.#ctor(KnowledgeGraph.DataTransferObjects.Settings)">
            <summary>
            The constructor.  Initializes the client.
            </summary>
            <param name="settings">The strongly typed settings object.</param>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.ClientInitialize(System.String,System.String,System.String)">
            <summary>
            Initialize the Neo4jClient.  Create the search index.
            </summary>
            <param name="connection">The connection string.</param>
            <param name="username">The database username.</param>
            <param name="password">The database password.</param>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.CreateTextSearchIndex(System.Boolean)">
            <summary>
            Create the search index if it doesn't exist or the recreate has been forced.
            </summary>
            <param name="forceRecreate">Drop the index if it exists and rebuild it.</param>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.IndexExists(System.String)">
            <summary>
            Determine if the index exists.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>Whether the index exists.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetClinicalTrialsList(KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            The endpoint for the Clinical Trial Search requests.  Queries Neo4j and returns a response object.
            </summary>
            <param name="searchRequest">The request schema object.</param>
            <returns>The search response object.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetClinicalTrialDetail(System.String)">
            <summary>
            The endpoint for the Clinical Trial Detail requests.  Queries Neo4j and returns a detail response object.
            </summary>
            <param name="new_id">The id of the Clinical Trial node.</param>
            <returns>The detail response object.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetClinicalTrialNodes(KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Construct and execute the search query with all user requested filters.
            </summary>
            <param name="searchRequest">The search request schema object.</param>
            <returns>An array of nodes for the response.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetClinicalTrialDetailNode(System.String)">
            <summary>
            Construct and execute the detail query with all data gathered.
            </summary>
            <param name="new_id">The id of the Clinical Trial node.</param>
            <returns>The detail node for the response.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetSearchResponse(KnowledgeGraph.DatabaseObjects.ClinicalTrialNode[],KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted)">
            <summary>
            Given an array of clinical trial search nodes, construct the search response object to return.
            </summary>
            <param name="clinicalTrialNodes">The array of nodes.</param>
            <param name="searchRequest">The search request schema object.</param>
            <returns>The search response object.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetClinicalTrialsResponse(KnowledgeGraph.DatabaseObjects.ClinicalTrialNode[])">
            <summary>
            Given an array of clinical trial search nodes, construct the search response Results object to return.
            </summary>
            <param name="clinicalTrialNodes">The array of nodes.</param>
            <returns>The Results response object containing the actual list of Clinical Trials.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetListLocationResponse(KnowledgeGraph.DatabaseObjects.LocationElement[])">
            <summary>
            Given a list of location nodes, construct the search response Locations object to return.
            </summary>
            <param name="locationElements">The list of location nodes.</param>
            <returns>The Locations response object containing the list of locations.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailResponse(KnowledgeGraph.DatabaseObjects.ClinicalTrialDetailNode)">
            <summary>
            Given a clinical trial detail node, contruct the detail response object to return.
            </summary>
            <param name="clinicalTrialDetailNode">The clinical trial detail node.</param>
            <returns>The clinical trial detail response object.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailAgeRangesResponse(KnowledgeGraph.DatabaseObjects.AgeRangeElement[])">
            <summary>
            Get the AgeRanges element of the clinical trial detail.
            </summary>
            <param name="ageRangeElements">The age range nodes.</param>
            <returns>The AgeRanges element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailConditionsResponse(KnowledgeGraph.DatabaseObjects.ConditionElement[])">
            <summary>
            Get the Conditions element of the clinical trial detail.
            </summary>
            <param name="conditionElements">The condition nodes.</param>
            <returns>The Conditions element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailContactsResponse(KnowledgeGraph.DatabaseObjects.ContactElement[])">
            <summary>
            Get the Contacts element of the clinical trial detail.
            </summary>
            <param name="contactElements">The contact nodes.</param>
            <returns>The Contacts element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailGendersResponse(KnowledgeGraph.DatabaseObjects.GenderElement[])">
            <summary>
            Get the Genders element of the clinical trial detail.
            </summary>
            <param name="genderElements">The gender nodes.</param>
            <returns>The Genders element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailHealthyVolunteersResponse(KnowledgeGraph.DatabaseObjects.HealthyVolunteerElement[])">
            <summary>
            Get the HealthyVolunteers element of the clinical trial detail.
            </summary>
            <param name="healthyVolunteerElements">The healthy volunteers nodes.</param>
            <returns>The HealthyVolunteers element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailInterventionsResponse(KnowledgeGraph.DatabaseObjects.InterventionElement[])">
            <summary>
            Get the Interventions element of the clinical trial detail.
            </summary>
            <param name="interventionElements">The intervention nodes.</param>
            <returns>The Interventions element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailLocationsResponse(KnowledgeGraph.DatabaseObjects.LocationElement[])">
            <summary>
            Get the Locations element of the clinical trial detail.
            </summary>
            <param name="locationElements">The location nodes.</param>
            <returns>The Locations element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailMeshTermsResponse(KnowledgeGraph.DatabaseObjects.MeshTermElement[])">
            <summary>
            Get the MeshTerms element of the clinical trial detail.
            </summary>
            <param name="MeshTermElements">The mesh term nodes.</param>
            <returns>The MeshTerms element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.GetDetailSponsorsResponse(KnowledgeGraph.DatabaseObjects.SponsorElement[])">
            <summary>
            Get the Sponsors element of the clinical trial detail.
            </summary>
            <param name="sponsorElements">The agency nodes.</param>
            <returns>The Sponsors element.</returns>
        </member>
        <member name="M:KnowledgeGraph.DatabaseInterface.Neo4jInterface.NotKGException(System.Exception)">
            <summary>
            Whether the exception is a known type.
            </summary>
            <param name="e">The exception.</param>
            <returns>Whether it's a KGException.</returns>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.AgeRangeNode">
            <summary>
            Database object for Age Range
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.AgencyClassNode">
            <summary>
            Database object for AgencyClass
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.AgencyNode">
            <summary>
            Database object for Agency
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ClinicalTrialDetailNode">
            <summary>
            Database object for Clinical Trial Detail
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.AgeRangeElement">
            <summary>
            Database object for Age Range
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ConditionElement">
            <summary>
            Database object for Condition
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ContactElement">
            <summary>
            Database object for Contact
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.GenderElement">
            <summary>
            Database object for Sex
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.HealthyVolunteerElement">
            <summary>
            Database object for Healthy Volunteers
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.InterventionElement">
            <summary>
            Database object for Intervention
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.LocationElement">
            <summary>
            Database object for Location
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.MeshTermElement">
            <summary>
            Database object for Mesh Term
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.SponsorElement">
            <summary>
            Database object for Agency
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ClinicalTrialNode">
            <summary>
            Database object for Clinical Trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ConditionNode">
            <summary>
            Database object for Condition
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.ContactNode">
            <summary>
            Database object for Contact
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.DbEnum">
            <summary>
            All Database Enums so Conversion Code gets generated.  Client can't handle
            deserialization properly with enums in objects.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.EnrollmentStatusNode">
            <summary>
            Database object for Enrollment Status
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.HealthyVolunteersNode">
            <summary>
            Database object for Healthy Volunteers
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.InterventionNode">
            <summary>
            Database object for Intervention
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.InterventionTypeNode">
            <summary>
            Database object for Intervention Type
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.LocationNode">
            <summary>
            Database object for Location
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.MeshTermNode">
            <summary>
            Database object for Mesh Term
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.PhaseNode">
            <summary>
            Database object for Phase Status
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.SexNode">
            <summary>
            Database object for Sex
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.StudyTypeNode">
            <summary>
            Database object for Study Type
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DatabaseObjects.YearNode">
            <summary>
            Database object for Year
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.Settings">
            <summary>
            Settings object for strongly typed settings in appsettings.[environment].json files
            </summary>
        </member>
        <member name="P:KnowledgeGraph.DataTransferObjects.Settings.DatabaseConnectionString">
            <summary>
            The connection string for the Neo4j database.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.DataTransferObjects.Settings.DatabaseUserName">
            <summary>
            The user name for the Neo4j database.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.DataTransferObjects.Settings.DatabasePassword">
            <summary>
            The password for the Neo4j database.
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.SearchRequestParser">
            <summary>
            Parse the received API request and build the SearchRequestDefaulted object
            which has non-optional values for required variables.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.DataTransferObjects.SearchRequestParser.SearchRequest">
            <summary>
            The search request object with all required values either set or defaulted.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.#ctor(System.String,Microsoft.AspNetCore.Http.IQueryCollection)">
            <summary>
            Parse the querystring keyValuePairs and generate the search request object.
            </summary>
            <param name="searchTerm">The search request text.</param>
            <param name="keyValuePairs">The querystring key/value pairs.</param>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseBoolean(System.String)">
            <summary>
            Parse and validate a boolean value.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <returns>The boolean or null.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseString(System.String)">
            <summary>
            Parse and validate a string value.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <returns>The string or null.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseLong(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Parse a long value and optionally apply bounds to it, throwing appropriate exceptions.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <param name="lowerBound">The lower bound of the long.</param>
            <param name="upperBound">The upper bound of the long.</param>
            <returns>The long or null.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseLongList(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Parse a list of longs, optionally applying lower and/or upper bounds to each value, throwing appropriate exceptions.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <param name="lowerBound">The lower bound of each long.</param>
            <param name="upperBound">The upper bound of each long.</param>
            <returns>The list of parsed longs or null.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseAgeRange">
            <summary>
            Parse an Age Range enumerator list as a string into a list of valid enumerators.
            </summary>
            <returns>The enumerator list.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseLat(System.String)">
            <summary>
            Parse and validate a latitude value.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <returns>The latitude.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseLng(System.String)">
            <summary>
            Parse and validate a longitude value.
            </summary>
            <param name="propertyName">The name of the searchrequest property.</param>
            <returns>The longitude.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParsePhase">
            <summary>
            Parse a Phase enumerator list as a string into a list of valid enumerators.
            </summary>
            <returns>The enumerator list.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseSex">
            <summary>
            Parse a Sex enumerator list as a string into a list of valid enumerators.
            </summary>
            <returns>The enumerator list.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseStatus">
            <summary>
            Parse a Status enumerator list as a string into a list of valid enumerators.
            </summary>
            <returns>The enumerator list.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ParseInterventionType">
            <summary>
            Parse an Intervention Type enumerator list as a string into a list of valid enumerators.
            </summary>
            <returns>The enumerator list.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ValidateSearchTerm(System.String)">
            <summary>
            Validate and trim a search term passed.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>The validated search term.</returns>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ValidateKeyPairs">
            <summary>
            Validate all query string parameters against valid query string parameters.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ValidateSearchRequestDefaulted">
            <summary>
            Post-Validation of the created search request object.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.ValidateGps">
            <summary>
            Validate the querystring Gps parameters for invalid combinations and throw appropriate exceptions.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.DataTransferObjects.SearchRequestParser.GetComponent(System.String,System.String@)">
            <summary>
            Get a query string component and return success.
            </summary>
            <param name="key">The query string key.</param>
            <param name="component">The query string value.</param>
            <returns>Whether the key was found.</returns>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailResponse">
            <summary>
            the detailed data from a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailAgeRange">
            <summary>
            the detail age range of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailCondition">
            <summary>
            the detail condition of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailContact">
            <summary>
            the detail contact of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailSex">
            <summary>
            the detail sex of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailHealthyVolunteers">
            <summary>
            the detail healthy volunteers of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailIntervention">
            <summary>
            the detail intervention of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailLocation">
            <summary>
            the detail location info of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailMeshTerm">
            <summary>
            the detail mesh term of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.DetailAgency">
            <summary>
            the detail agency of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.ErrorResponse">
            <summary>
            data indicating error conditions
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.SearchRequest">
            <summary>
            data for the search request endpoint; NOTE: enum values MUST be lowercase
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.SearchRequestDefaulted">
            <summary>
            data for the search request, with fields requiring defaults required; NOTE: enum values
            MUST be lowercase
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.SearchResponse">
            <summary>
            data included from the search response
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.ListClinicalTrial">
            <summary>
            the list data from a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.DataTransferObjects.ListLocation">
            <summary>
            the list location of a clinical trial
            </summary>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.DatabaseConnectionKGException">
            <summary>
            An exception class to handle an error connecting to the data source.  
            Return abbreviated information in production.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.DatabaseConnectionKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.DatabaseConnectionKGException.#ctor(System.Exception,System.String,System.String)">
            <summary>
            Construct the exception
            </summary>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.DatabaseConnectionKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.DatabaseConnectionKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.KGException">
            <summary>
            An abstract exception class to handle all application errors.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.KGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.KGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.KGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ParameterCannotBeNullKGException">
            <summary>
            An exception class to handle a missing required parameter.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ParameterCannotBeNullKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCannotBeNullKGException.#ctor(System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="parameterName">The parameter that failed.</param>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCannotBeNullKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCannotBeNullKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ParameterCombinationInvalidKGException">
            <summary>
            An exception class to handle an invalid combination of parameters.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ParameterCombinationInvalidKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCombinationInvalidKGException.#ctor(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="description"></param>
            <param name="parameterNames"></param>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCombinationInvalidKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterCombinationInvalidKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ParameterInvalidKGException">
            <summary>
            An exception class to handle an invalid parameter value.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ParameterInvalidKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterInvalidKGException.#ctor(System.String,System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="parameterName">The parameter that failed.</param>
            <param name="parameterValue">The parameter value that caused the failure.</param>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterInvalidKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterInvalidKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ParameterNotRecognizedKGException">
            <summary>
            An exception class to handle a parameter name that isn't recognized.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ParameterNotRecognizedKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterNotRecognizedKGException.#ctor(System.String,System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="parameterName">The parameter that failed.</param>
            <param name="parameterValue">The parameter value that caused the failure.</param>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterNotRecognizedKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterNotRecognizedKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ParameterRequiredKGException">
            <summary>
            An exception class to handle a missing required parameter.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ParameterRequiredKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterRequiredKGException.#ctor(System.String,System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="parameterName">The parameter that failed.</param>
            <param name="parameterValue">The parameter value that caused the failure.</param>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterRequiredKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ParameterRequiredKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ResourceNotFoundKGException">
            <summary>
            An exception class to handle a missing requested resource.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ResourceNotFoundKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ResourceNotFoundKGException.#ctor(System.String,System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="parameterName">The parameter that failed.</param>
            <param name="parameterValue">The parameter value that caused the failure.</param>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ResourceNotFoundKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ResourceNotFoundKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Exceptions.ServerErrorKGException">
            <summary>
            An exception class to handle an unexpected error.
            Return abbreviated information in production.
            </summary>
        </member>
        <member name="P:KnowledgeGraph.Exceptions.ServerErrorKGException.StatusCode">
            <summary>
            The status code to return to the caller
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ServerErrorKGException.#ctor(System.Exception,System.String,System.String)">
            <summary>
            Construct the exception
            </summary>
            <param name="ex">The exception that occurred</param>
            <param name="callingObject">The object in which the failure occurred</param>
            <param name="callingRoutine">The routine in which the failure occurred</param>        
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ServerErrorKGException.CreateErrorResponse">
            <summary>
            Create the response to return to the caller
            </summary>
            <returns>The error response</returns>
        </member>
        <member name="M:KnowledgeGraph.Exceptions.ServerErrorKGException.LogError(Microsoft.Extensions.Logging.ILogger{KnowledgeGraph.Exceptions.KGException})">
            <summary>
            Log the exception.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="T:KnowledgeGraph.Program">
            <summary>
            The Program class. Set options and initialization.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Program.Main(System.String[])">
            <summary>
            The Main method to run the application.  Set options.
            </summary>
            <param name="args">Command line arguments.</param>
        </member>
        <member name="M:KnowledgeGraph.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create the Web Host Builder.
            </summary>
            <param name="args">The command line arguments.</param>
            <returns>The Web Host Builder.</returns>
        </member>
        <member name="T:KnowledgeGraph.Startup">
            <summary>
            Defines the configuration of the Web API application.
            Adapted from CSCI E-94 class template.
            </summary>
        </member>
        <member name="M:KnowledgeGraph.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:KnowledgeGraph.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="P:KnowledgeGraph.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
            <value>
            The hosting environment.
            </value>
        </member>
        <member name="P:KnowledgeGraph.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:KnowledgeGraph.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:KnowledgeGraph.Startup.ConfigureSwaggerUI(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            SWAGGER: Configures the swagger UI.
            </summary>
            <param name="swaggerGenOptions">The swagger gen options.</param>
        </member>
        <member name="M:KnowledgeGraph.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
    </members>
</doc>
